package com.rhisco.springsecurity.model;
// Generated Mar 7, 2016 1:47:24 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="security"
    , uniqueConstraints = @UniqueConstraint(columnNames="username") 
)
public class User  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idUser;
     private String username;
     private String password;
     private String firstName;
     private String lastName;
     private String email;
     private String state = State.ACTIVE.getState();
     private Set<UserProfile> userprofiles = new HashSet<UserProfile>(0);

    public User() {
    }

	
    public User(String username, String password, String firstName, String lastName, String email, String state) {
        this.username = username;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.state = state;
    }
    public User(String username, String password, String firstName, String lastName, String email, String state, Set<UserProfile> userprofiles) {
       this.username = username;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.state = state;
       this.userprofiles = userprofiles;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idUser", unique=true, nullable=false)
    public Integer getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }

    
    @Column(name="username", unique=true, nullable=false, length=30)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=100)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="firstName", nullable=false, length=30)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="lastName", nullable=false, length=30)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="email", nullable=false, length=30)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="state", nullable=false, length=30)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_has_userprofile", catalog="security", joinColumns = { 
        @JoinColumn(name="user_idUser", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="userprofile_idUserProfile", nullable=false, updatable=false) })
    public Set<UserProfile> getUserProfiles() {
        return this.userprofiles;
    }
    
    public void setUserProfiles(Set<UserProfile> userprofiles) {
        this.userprofiles = userprofiles;
    }

    @Override
	public String toString() 
    {
		return "User [id=" + idUser + ", username=" + username + ", password=" + password
				+ ", firstName=" + firstName + ", lastName=" + lastName
				+ ", email=" + email + ", state=" + state + ", userProfiles=" + userprofiles +"]";
	}


}


